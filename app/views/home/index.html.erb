<% content_for(:title, 'Home Page | OmniAuth Example') %>

<h1>OAuth on Rails</h1>
<h3 class="subheader">Logging in With Twitter, Facebook, and More!</h3>
<hr/>

<p>
Welcome to the wonderful world of OAuth. Using <a href="https://github.com/intridea/omniauth">OmniAuth</a>
and its myriad <a href="https://github.com/intridea/omniauth/wiki/List-of-Strategies">strategies</a> you can
add the ability to login to your Rails app via many 3rd party identity providers.
</p>

<div class="row">
  <div class="small-10 large-centered columns">
    <%= link_to 'Login with Facebook', '#',  class: 'button large' %>
    &nbsp;
    <%= link_to 'Login with Twitter', '#',  class: 'button large' %>
    &nbsp;
    <%= link_to 'Login with Github', '#',  class: 'button large' %>
  </div>
</div>

<h2>Acquire Your Secrets</h2>
<hr/>
<p>
For every provider you wish to provide OAuth access through you must <strong>acquire a set of developer tokens</strong>.
Click on the desired provider below to go to the New Application signup form (note: you will have to create developer
accounts for each provider.)
</p>

<ul class="large-block-grid-4">
  <li>
    <a class="th radius" href="https://developers.facebook.com/apps">
      <%= image_tag('facebook-oauth.png') %>
    </a>
    <br/>
    <h6 style="text-align:center;">Facebook</h6>
  </li>
  <li>
    <a class="th radius" href="https://dev.twitter.com/apps/new">
      <%= image_tag('twitter-oauth.png') %>
    </a>
    <br/>
    <h6 style="text-align:center;">Twitter</h6>
  </li>
  <li>
    <a class="th radius" href="https://github.com/settings/applications/new">
      <%= image_tag('github-oauth.png') %>
    </a>
    <br/>
    <h6 style="text-align:center;">Github</h6>
  </li>
</ul>

<p>
After you've created a new application for each provider you wish to provdie access through, note the assigned keys. Often
they're called the <b>consumer key</b> and <b>consumer secret</b> or the <b>API key</b> and <b>API secret</b>.
</p>


<h2>Update Your Gemfile</h2>
<hr/>
<p>
This guide assumes you're currently using <a href="https://github.com/plataformatec/devise">devise</a> to manage
user authentication, but omniauth can be used with any auth solution (including homegrown). Add the appropriate gems
to your gemfile to pull in the strategies you wish to use. For this example we'll be adding support for <b>Facebook</b>,
<b>Twitter</b>, and <b>Github</b>.
</p>

<%= highlight_code('update-gemfile.example', :ruby) %>

<h2>Add Initialization Code to <code>devise.rb</code></h2>
<hr/>
<p>
For each provider you wish to offer connectivity with, you must configure omniauth using the key and secret you were
given when you created your application. Open <code>config/initializers/devise.rb</code> and scroll down to the OmniAuth
section.
</p>

<%= highlight_code('configure-omniauth.example', :ruby) %>

<p>
<b>Please note</b> that for now we're funneling environment variable values to the configuration; we'll define them
in the next section, but <b>ALWAYS</b> maintain strict control over your consumer token and secret; they should be
kept out of source control and inaccessible to everyone but a privileged few.
</p>

<h2>Configure Environment Variables</h2>
<hr/>
<p>
There are a variety of ways to make the OAuth application tokens available to your Rails application:
</p>

<ol>
  <li>
    <b>If you're using <a href="http://pow.cx/">pow</a> to serve your app locally</b> then it's as simple as creating a <code>.powenv</code>
    file in the root of your project.
    <%= highlight_code('powenv.example', :sh) %>
  </li>
  <li>
    <b>If you're running your development sever from the command line</b> then you'll need to pass the environment
    variables when starting the server.
    <%= highlight_code('cli-startup.example', :sh) %>
  </li>
</ol>

<h2>Configure Devise Module for OmniAuth</h2>
<hr/>
<p>
Open your <code>User</code> model and add the <code>:omniauthable</code> module.

<%= highlight_code('configure-user.example', :ruby) %>
</p>

<h2>Create <code>omniauth_callbacks_controller.rb</code></h2>
<hr/>
<p>
The preliminary setup is done; let's tackle the roundtrip to the provider servers. OmniAuth provides url helpers to
allow you to link to a provider's oauth front door. Pass the symbol of the provider to the helper.
</p>

<%= highlight_code('link-to-providers.example', :erb) %>

<p>
Once the user has navigated to the provider website, entered credentials, and approved your app for access, they
will be redirected back to your callback path. The <code>OmniAuthCallbacksController</code> will handle the redirect
request from the provider, and login or register the user based on the contents of the <code>omniauth.auth</code> hash
contained in the request.
</p>

<%= highlight_code('omniauth-callbacks-controller.example', :ruby) %>

<h2>Add OAuth fields to <code>User</code> table</h2>
<hr/>
<p>
Once the user has authenticated with the provider we're going to want to save off some of the auth data. To that end
let's add some new fields to the User data model to store the oauth-related fields.
</p>
<p>
Create a new database migration:
</p>

<%= highlight_code('create-migration.example', :bash) %>

<p>
Open the generated migration file to see the new fields that will be added to the table.
</p>

<%= highlight_code('enhance-user-model.example', :ruby) %>

<h2>Add Support to <code>User</code> class</h2>
<hr/>
<p>
On line 3 of the OmniauthCallbacksController you can see we want to call into the <code>User</code> class to acquire
aa user instance based on the auth data returned by the provider. The method <code>User.from_omniauth</code> will
see if a user corresponding to the provider/uid already exists in our records, or create one if not found.
</p>

<%= highlight_code('user-methods.example', :ruby) %>

<p>
<b>Note:</b> Fans of thin models will likely wince at this design. I wholly agree that these operations can be refactored
out, but for the sake of simplicity I chose to define them here for now.
</p>



<div class="row">
  <div class="small-10 large-centered columns">
    <%= link_to 'Login with Facebook', '#',  class: 'button large' %>
    &nbsp;
    <%= link_to 'Login with Twitter', '#',  class: 'button large' %>
    &nbsp;
    <%= link_to 'Login with Github', '#',  class: 'button large' %>
  </div>
</div>



